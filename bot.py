from os import getcwd
import datetime as DT
from time import sleep
import urllib.request as req
import random
import sqlite3
import json

# –§—Ä–µ–π–º–≤–æ—Ä–∫ PyTelegramBotAPI
import telebot


token = '362217833:AAHAd6fT3RnG34vtam0T4fDS3RQWgEjIhCw'
bot = telebot.TeleBot(token)
markup = telebot.types.ReplyKeyboardMarkup()

admins_id_list = [224475156]

# –ü—É—Ç—å –∫–æ –≤—Å–µ–º —Ñ–∞–π–ª–∞–º –ø—Ä–æ–µ–∫—Ç–∞
path = str(getcwd()) + '/'

subjectsList = ['–†—É—Å—Å–∫–∏–π', '–õ–∏—Ç–µ—Ä–∞—Ç—É—Ä–∞', '–ê–ª–≥–µ–±—Ä–∞ (1–≥—Ä)', '–ê–ª–≥–µ–±—Ä–∞ (2–≥—Ä)', 
				'–ì–µ–æ–º–µ—Ç—Ä–∏—è (1–≥—Ä)', '–ò—Å—Ç–æ—Ä–∏—è','–û–±—â–µ—Å—Ç–≤–æ–∑–Ω–∞–Ω–∏–µ', '–§–∏–∑–∏–∫–∞', '–•–∏–º–∏—è', 
				'–ë–∏–æ–ª–æ–≥–∏—è', '–ì–µ–æ–≥—Ä–∞—Ñ–∏—è', '–ì–µ–æ–º–µ—Ç—Ä–∏—è (2–≥—Ä)','–ò–ö–¢ (1–≥—Ä)', 
				'–ê–Ω–≥–ª–∏–π—Å–∫–∏–π (1–≥—Ä)', '–û–ë–ñ', '–ê–Ω–≥–ª–∏–π—Å–∫–∏–π (2–≥—Ä)', '–≠–∫–æ–Ω–æ–º–∏–∫–∞', '–ò–ö–¢ (2–≥—Ä)']

# –°–ª–æ–≤–∞—Ä—å –∫—Ä–∞—Ç–∫–∏—Ö –æ—Ç–≤–µ—Ç–æ–≤
customMessages = [[['‚ù§', 'üíô'],'send a ‚ù§','–ò —è —Ç–µ–±—è ‚ù§'],
				  [['–º–æ–∂–µ—à—å'],'–Ω–∞ —Å–ª–∞–±–æ –º–µ–Ω—è –≤–∑—è–ª','–Ø –≤—Å—ë –º–æ–≥—É!\U0001F64C'],
				  [['—Å–ø–∞—Å–∏–±–æ','—Å–ø—Å','–±–ª–∞–≥–æ–¥–∞—Ä—é'],'–ø–æ–±–ª–∞–≥–æ–¥–∞—Ä–∏–ª', '–ü–æ–∂–∞–ª—É–π—Å—Ç–∞)'] ]

# –ü–∞—Ä–∞ —Å–º–∞–π–ª–æ–≤
point = '\U000025AA'
succes = '\U00002705'

markup.row('–ß—Ç–æ –Ω–∞ –∑–∞–≤—Ç—Ä–∞?')
markup.row('–°–æ–±—ã—Ç–∏—è', '–ò–Ω—Ñ–æ')
markup.row('–ü–æ–≥–æ–¥–∫—É –±—ã —É–∑–Ω–∞—Ç—å')
markup.row('–†—É—Å—Å–∫–∏–π', '–õ–∏—Ç–µ—Ä–∞—Ç—É—Ä–∞')
markup.row('–ê–ª–≥–µ–±—Ä–∞ (1–≥—Ä)', '–ê–ª–≥–µ–±—Ä–∞ (2–≥—Ä)')
markup.row('–ì–µ–æ–º–µ—Ç—Ä–∏—è (1–≥—Ä)', '–ì–µ–æ–º–µ—Ç—Ä–∏—è (2–≥—Ä)')
markup.row('–ò—Å—Ç–æ—Ä–∏—è', '–û–±—â–∞–≥–∞')
markup.row('–§–∏–∑–∏–∫–∞', '–•–∏–º–∏—è')
markup.row('–ë–∏–æ–ª–æ–≥–∏—è', '–ì–µ–æ–≥—Ä–∞—Ñ–∏—è')
markup.row('–ò–ö–¢ (1–≥—Ä)', '–ò–ö–¢ (2–≥—Ä)')
markup.row('–ê–Ω–≥–ª–∏–π—Å–∫–∏–π (1–≥—Ä)', '–ê–Ω–≥–ª–∏–π—Å–∫–∏–π (2–≥—Ä)')
markup.row('–û–ë–ñ', '–≠–∫–æ–Ω–æ–º–∏–∫–∞')
markup.row('–ß—Ç–æ –Ω–∞ —Å–µ–≥–æ–¥–Ω—è?...')

polojenie = open(path + 'MTK2017.pdf', 'rb')


@bot.message_handler(commands=['addevent'])
def addevent(message):
	''' –î–æ–±–∞–≤–ª–µ–Ω–∏–µ —Å–æ–±—ã—Ç–∏—è '''
	# –†–∞–∑—Ä–µ—à–µ–Ω–æ —Ç–æ–ª—å–∫–æ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä—É
	if message.from_user.id in admins_id_list:
		bot.send_message(message.chat.id, '–£–¥–∞–ª–∏—Ç—å –ø–æ—Å–ª–µ–¥–Ω–∏–π event/–¥–æ–±–∞–≤–∏—Ç—å –Ω–æ–≤—ã–π? [1/2]', reply_markup=None)
		def defineAction(message):
			if message.text == '1':
				@sqlAcces
				def getSQL(conn, cursor):
					# –£–¥–∞–ª–∏–º —Å–∞–º–æ–µ —Å—Ç–∞—Ä–æ–µ –ø–æ –¥–∞—Ç–µ —Å–æ–±—ã—Ç–∏–µ
					cursor.execute('SELECT * FROM events')
					rows = sorted(cursor.fetchall(), key=lambda elem: elem[2])
					row = rows[0]
					lastdate = row[2]
					cursor.execute('DELETE FROM events WHERE deadline=?', (lastdate, ))
					bot.send_message(message.chat.id, '–£–¥–∞–ª–∏–ª —Å–æ–±—ã—Ç–∏–µ '+row[0]+' —Å –¥–∞—Ç–æ–π '+lastdate, reply_markup=None)
					logger(message, '–£–¥–∞–ª–∏–ª —Å–æ–±—ã—Ç–∏–µ '+row[0]+' —Å –¥–∞—Ç–æ–π '+lastdate)
					conn.commit()
					return
			# –î–æ–±–∞–≤–∏–º –Ω–æ–≤–æ–µ —Å–æ–±—ã—Ç–∏–µ
			elif message.text == '2':
				bot.send_message(message.chat.id, '–î–æ–±–∞–≤–∏—Ç—å event –≤–∏–¥–∞ "–î–µ–∂—É—Ä—Å—Ç–≤–æ - 02-06')
				def addEv(message):
					@sqlAcces
					def getSQL_(conn, cursor):
						query = message.text.split(' - ')
						cursor.execute('INSERT INTO events (eventName, weekDay, deadline) VALUES (?,?,?)', (query[0], defineWeekdyByDate(query[1]), '2017-'+query[1]))
						bot.send_message(message.chat.id, '–î–æ–±–∞–≤–∏–ª —Å–æ–±—ã—Ç–∏–µ %s - %s - %s' % (query[0], defineWeekdyByDate(query[1]),'2017-'+query[1]))
						conn.commit()
						logger(message, '–î–æ–±–∞–≤–∏–ª —Å–æ–±—ã—Ç–∏–µ %s - %s - %s' % (query[0], defineWeekdyByDate(query[1]),'2017-'+query[1]))
				bot.register_next_step_handler(message, addEv)
			else:
				return
		bot.register_next_step_handler(message, defineAction)
	return


@bot.message_handler(commands=['addhomework'])
def addHomework(message):
	''' –î–æ–±–∞–≤–ª–µ–Ω–∏–µ –¥–æ–º–∞—à–Ω–µ–≥–æ –∑–∞–¥–∞–Ω–∏—è'''
	# –†–∞–∑—Ä–µ—à–µ–Ω–æ —Ç–æ–ª—å–∫–æ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä—É
	if message.from_user.id in admins_id_list:
		bot.send_message(message.chat.id, '\U0001F442', reply_markup=None)

		def validQuery(message):
			# –ü—Ä–æ–≤–µ—Ä–∫–∞ –≤–∞–ª–∏–¥–Ω–æ—Å—Ç–∏ –≤–≤–µ–¥—ë–Ω–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö –æ –î–ó
			try:
				query = [x for x in str(message.text).split(' - ')]
				if (query[0] in subjectsList):
					if (len(query) == 3):
						if (len(query[1].split('-')) == 2) or (len(query[1]) in [4, 5]): # –í–∞–ª–∏–¥–∞—Ü–∏—è –¥–∞—Ç—ã
							weekday = defineWeekdyByDate(query[1])
						else:
							bot.send_message(message.chat.id, '–ù–µ–ø—Ä–∞–≤–∏–ª—å–Ω–æ —É–∫–∞–∑–∞–Ω–∞ –¥–∞—Ç–∞. –û–Ω–∞ –¥–æ–ª–∂–Ω–∞ –∏–º–µ—Ç—å –≤–∏–¥ "03-12" (12 –º–∞—Ä—Ç–∞)')
							logger(message, 'invalid query')
							raise Exception
					else:
						bot.send_message(message.chat.id, '–ù–µ—Ç –ø—Ä–æ–±–µ–ª–æ–≤ –º–µ–∂–¥—É —Ç–∏—Ä–µ (–∏–ª–∏ –ø—Ä–æ—Å—Ç–æ –Ω–µ—Ç —Ç–∏—Ä–µ)')
						logger(message, 'invalid query')
						raise Exception
				else:
					bot.send_message(message.chat.id, '–ù–µ—Ç —Ç–∞–∫–æ–≥–æ –ø—Ä–µ–¥–º–µ—Ç–∞')
					logger(message, 'invalid query')
					raise Exception
			except:
				bot.send_message(message.chat.id, '–ù–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç\n–ü—Ä–∞–≤–∏–ª—å–Ω—ã–π –∑–∞–ø—Ä–æ—Å:\n–õ–∏—Ç–µ—Ä–∞—Ç—É—Ä–∞ - 03-12 - –î–ó', reply_markup=None)
				return
			@sqlAcces
			def add(conn, cursor):
				# –ï—Å–ª–∏ —Å–æ–æ–±—â–µ–Ω–∏–µ –≤–∞–ª–∏–¥–Ω–æ–µ, —Ç–æ –∑–∞–ø–∏—à–µ–º –î–ó –≤ –±–∞–∑—É –¥–∞–Ω–Ω—ã—Ö
				cursor.execute('''UPDATE subjects
									SET weekDay=?,dateToExec=?,homework=?
									WHERE SubjName=?''', (weekday, str('2017-' + query[1]), query[2], query[0]))
				conn.commit()
				bot.send_message(message.chat.id, succes+'–î–æ–±–∞–≤–ª–µ–Ω–æ'+succes, reply_markup=None)
				logger(message, 'appended homework "%s"' % query[0])
				return

		bot.register_next_step_handler(message, validQuery)

	else:
		logger(message, 'tried to add homework without permission')
	return


def currentSubject(message):
	''' –û—Ç–ø—Ä–∞–≤–∫–∞ –î–ó –ø–æ –≤—ã–±—Ä–∞–Ω–Ω–æ–º—É –ø—Ä–µ–¥–º–µ—Ç—É '''
	@sqlAcces
	def getCrntSbj(conn, cursor):
		# –í—ã–±–æ—Ä–∫–∞ –ø–æ –ø—Ä–µ–¥–º–µ—Ç—É
		cursor.execute('SELECT * FROM subjects WHERE SubjName=?', (message.text, ))
		homework = cursor.fetchone()
		if homework[3] in ['–Ω–∏—á–µ–≥–æ –Ω–µ –∑–∞–¥–∞–Ω–æ', '–ù–∏—á–µ–≥–æ –Ω–µ –∑–∞–¥–∞–Ω–æ']:
			bot.send_message(message.chat.id, '–ù–∏—á–µ–≥–æ –ø–æ —ç—Ç–æ–º—É –ø—Ä–µ–¥–º–µ—Ç—É –Ω–µ –∑–∞–¥–∞–Ω–æ')
		# –ï—Å–ª–∏ —á—Ç–æ-—Ç–æ –∑–∞–¥–∞–Ω–æ
		else:
			bot.send_message(message.chat.id, '%s - –∑–∞–¥–∞–Ω–æ "%s" %s (%s)' % (message.text, homework[3], end(homework[2][6:]), homework[1]), reply_markup=None)
		return


def currentWeather_message(message):
	''' –û—Ç–≤–µ—Ç –Ω–∞ –∑–∞–ø—Ä–æ—Å –ø–æ–≥–æ–¥—ã '''
	weatherMsg = getWeather()
	bot.send_message(message.chat.id, weatherMsg, reply_markup=None)
	return


def customLowerMessageChecker(message):
	''' –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å–æ–¥–µ—Ä–∂–∞–Ω–∏—è —Ç–µ–∫—Å—Ç–∞ –ø—Ä–∏—Å–ª–∞–Ω–Ω–æ–≥–æ —Å–æ–æ–±—â–µ–Ω–∏—è –≤ —Å–ª–æ–≤–∞—Ä–µ —á–∞—Å—Ç—ã—Ö —Ñ—Ä–∞–∑
		phrases[0] - —à–∞–±–ª–æ–Ω—ã, phrases[1] - –ª–æ–≥–∏, phrases[2] - –æ—Ç–≤–µ—Ç—ã '''
	txt = message.text.lower()
	# –ü—Ä–æ–≤–µ—Ä—è–µ–º –≤—Å–µ —Ñ—Ä–∞–∑—ã
	for phrases in customMessages:
		if len(phrases[0]) < 2:
			if phrases[0][0] in txt:
				logger(message, phrases[1])
				bot.send_message(message.chat.id, phrases[2], reply_markup=None)
				return
		else:
			for phrase in phrases[0]:
				if phrase in txt:
					logger(message, phrases[1])
					bot.send_message(message.chat.id, phrases[2], reply_markup=None)
					return
	logger(message, 'send a "%s"' % txt)
	return


def defineWeekdyByDate(date):
	''' –ü–æ –¥–∞—Ç–µ –≤–∏–¥–∞ mm-dd –∏–ª–∏ yyyy-mm-dd –æ–ø—Ä–µ–¥–µ–ª—è–µ—Ç –¥–µ–Ω—å –Ω–µ–¥–µ–ª–∏ '''
	weekdayDict = {0: '–ø–æ–Ω–µ–¥–µ–ª—å–Ω–∏–∫', 1: '–≤—Ç–æ—Ä–Ω–∏–∫', 2: '—Å—Ä–µ–¥–∞', 3: '—á–µ—Ç–≤–µ—Ä–≥', 4: '–ø—è—Ç–Ω–∏—Ü–æ', 5: '—Å—É–±–±–æ—Ç–∞', 6: '–≤–æ—Å–∫—Ä–µ—Å–µ–Ω—å–µ'}
	# –ï—Å–ª–∏ —Ñ–æ—Ä–º–∞—Ç yyyy-mm-dd
	if date[:4] == '2017':
		mm = date.split('-')[1]
		dd = date.split('-')[2]
	# –ï—Å–ª–∏ —Ñ–æ—Ä–º–∞—Ç mm-dd
	else:
		mm = date.split('-')[0]
		dd = date.split('-')[1]
	if dd[0] == '0':
		dd = dd[1]
	if mm[0] == '0':
		mm = mm[1]
	wd = DT.date(2017, int(mm), int(dd)).weekday() # –≤–µ—Ä–Ω—ë—Ç —á–∏—Å–ª–æ —Å 0 –¥–æ 6
	weekday = weekdayDict[int(wd)]	# –≤–µ—Ä–Ω—ë—Ç –ø–æ–Ω–µ–¥–µ–ª—å–Ω–∏–∫-–≤–æ—Å–∫—Ä–µ—Å–µ–Ω—å–µ
	return weekday


def end(date):
	''' –£–ø—Ä–æ—â—ë–Ω–Ω–∞—è —Å–∏—Å—Ç–µ–º–∞ –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–∏—è –ø–∞–¥–µ–∂–∞. –ü—Ä–∏–Ω–∏–º–∞–µ—Ç mm-dd '''
	monthes = {1:'—è–Ω–≤–∞—Ä—è', 2:'—Ñ–µ–≤—Ä–∞–ª—è',3:'–º–∞—Ä—Ç–∞',4:'–∞–ø—Ä–µ–ª—è',5:'–º–∞—è',6:'–∏—é–Ω—è',7:'–∏—é–ª—è',8:'–∞–≤–≥—É—Å—Ç–∞',9:'—Å–µ–Ω—Ç—è–±—Ä—è',10:'–æ–∫—Ç—è–±—Ä—è',11:'–Ω–æ—è–±—Ä—è',12:'–¥–µ–∫–∞–±—Ä—è'}
	date = date.split('-') # ['01', '07']
	# –ß–∏—Å—Ç–∏–º –æ—Ç –ª–∏–¥–∏—Ä—É—é—â–∏—Ö –Ω—É–ª–µ–π
	if date[0][0] == '0':
		date[0] = date[0][1]
	if date[1][0] == '0':
		date[1] = date[1][1]
	month = monthes[int(date[0])]
	# –ò—Å–∫–ª—é—á–µ–Ω–∏–µ: –ö–û 2–æ–º—É —á–∏—Å–ª—É
	if date[1] == '2':
		date[1] = '2'
		pred = '–∫–æ'
	else:
		pred = '–∫'

	return pred + ' ' + date[1] + '–º—É ' + month


def events_message(message):
	''' –§–æ—Ä–º–∏—Ä—É–µ—Ç –æ—Ç–≤–µ—Ç –Ω–∞ –∑–∞–ø—Ä–æ—Å –æ –±–ª–∏–∂–∞–π—à–∏—Ö —Å–æ–±—ã—Ç–∏—è—Ö '''
	@sqlAcces
	def getEvents(conn, cursor):
		cursor.execute('SELECT * FROM events')
		rows = sorted(cursor.fetchall(), key=lambda elem: elem[2])
		response = ''
		for row in rows:
			date = [x for x in str(row[2]).split('-')]
			if date[2][0] == '0':	# –ï—Å–ª–∏ 0 –ø–µ—Ä–µ–¥ —á–∏—Å–ª–æ–º –º–µ—Å—è—Ü–∞
				date[2][0] == ''
			response += '%s %s - %se (%s)\n' % (point, row[0], date[2], row[1])
		bot.send_message(message.chat.id, response, reply_markup=None)


def getWeather():
    ''' –°–∫—Ä–∏–ø—Ç –ø–æ–ª—É—á–µ–Ω–∏—è –∞–∫—Ç—É–∞–ª—å–Ω–æ–π –ø–æ–≥–æ–¥—ã –≤ –°–∞–Ω–∫—Ç-–ü–µ—Ç–µ—Ä–±—É—Ä–≥–µ, –ø–µ—Ä–µ–≤–æ–¥–∞
		—Ä–µ–∑—É–ª—å—Ç–∞—Ç–∞ –≤ –∏–∫–æ–Ω–æ—á–Ω—ã–π, –±—ã—Å—Ç—Ä–æ—á–∏—Ç–∞–µ–º—ã–π –≤–∏–¥, —Ä—É—Å–∏—Ñ–∏–∫–∞—Ü–∏—è –Ω–µ–ø–µ—Ä–µ–≤–æ–¥–∏–º—ã—Ö
		—Å–µ—Ä–≤–∏—Å–æ–º –ø–∞—Ä–∞–º–µ—Ç—Ä–æ–≤ '''
    weatherEmojs  = {'Clouds':'\U00002601', 'Mist': '\U0001F301', 'Snow': '\U00002744', 'Clear': '\U0001F5FB', 'Rain': '\U00002614', 'Thunderstorm':'\U000026A1', 'Drizzle':'\U00002614'}
    statEms = {'tmp':'\U0001F4C8','prs':'\U0001F4AD','hyd':'\U0001F4A7','wnd':'\U0001F343','inf':'\U00002139'}
    url = "http://api.openweathermap.org/data/2.5/weather?q=Saint-Petersburg&mode=json&units=metric&appid=6151f42fb82c1ab87863da29465b594b&lang=ru"
    weatherMsg = '\n\n–°–µ–π—á–∞—Å —É –Ω–∞—Å:\n'
    # –û–±—Ä–∞–±–æ—Ç–∫–∞ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∞ –∑–∞–ø—Ä–æ—Å–∞
    with req.urlopen(url) as f:
        json_string = f.read().decode("utf-8")
        parsed_json = json.loads(json_string)
        sky = parsed_json["weather"][0]['main']
        sky_deskr = parsed_json["weather"][0]['description']
        temp = str(int(parsed_json['main']['temp']))
        vlajn = str(parsed_json['main']['humidity']) + '%'
        pressure = parsed_json['main']['pressure']
        windSpeed = str(parsed_json['wind']['speed']) + ' –º/—Å'

    # –ù–æ—Ä–º–∞–ª—å–Ω–æ–µ –¥–∞–≤–ª–µ–Ω–∏–µ –≤ –°–∞–Ω–∫—Ç-–ü–µ—Ç–µ—Ä–±—É—Ä–≥–µ: 102000-103500
    # –î–∞–≤–ª–µ–Ω–∏–µ –ø—Ä–∏—Å—ã–ª–∞–µ—Ç—Å—è –≤ –≥–µ–∫—Ç–æ–ø–∞—Å–∫–∞–ª—è—Ö
    if pressure in range(1020, 1035):
        pressure = '–Ω–æ—Ä–º–∞–ª—å–Ω–æ–µ'
    elif pressure in range(993, 1020):
        pressure = '–Ω–∏–∂–µ –Ω–æ—Ä–º—ã'
    elif pressure in range(0, 993):
    	pressure = '–Ω–∏–∑–∫–æ–µ'
    elif pressure in range(1035, 1050):
        pressure = '–≤—ã—à–µ –Ω–æ—Ä–º—ã'
    else:
    	pressure = '–≤—ã—Å–æ–∫–æ–µ'
    # –ï—Å–ª–∏ –≤ —Å–ª–æ–≤–∞—Ä–µ –µ—Å—Ç—å —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É—é—â–∏–π –ø–æ–≥–æ–¥–µ —Å—Ç–∏–∫–µ—Ä - –±–µ—Ä—ë–º
    try:
        sk_em = weatherEmojs[sky]
    except:
        sk_em = weatherEmojs['Clouds']
    # –§–æ—Ä–º–∏—Ä–æ–≤–∞–Ω–∏–µ —Å–æ–æ–±—â–µ–Ω–∏—è –æ –ø–æ–≥–æ–¥–µ
    weatherMsg += (statEms['tmp']+" –¢–µ–º–ø–µ—Ä–∞—Ç—É—Ä–∞: "+temp+" C\n"
                           +sk_em+" –ù–∞ —É–ª–∏—Ü–µ "+sky_deskr+"\n"
                  +statEms['prs']+" –î–∞–≤–ª–µ–Ω–∏–µ "+pressure+"\n"
                  +statEms['hyd']+" –í–ª–∞–∂–Ω–æ—Å—Ç—å –≤–æ–∑–¥—É—Ö–∞: "+vlajn+"\n"
                  +statEms['wnd']+" –°–∫–æ—Ä–æ—Å—Ç—å –≤–µ—Ç—Ä–∞: "+windSpeed)
    return weatherMsg


def inBase(message):
	''' –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å–æ–¥–µ—Ä–∂–∞–Ω–∏—è chat_id –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –≤ –ë–î
		–í—ã–∑—ã–≤–∞–µ—Ç—Å—è –ø—Ä–∏ –æ–±—Ä–∞–±–æ—Ç–∫–µ –∫–∞–∂–¥–æ–≥–æ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–Ω–æ–≥–æ
		–±–æ—Ç—É —Å–æ–æ–±—â–µ–Ω–∏—è '''
	@sqlAcces
	def inbase(conn, cursor):
		# –í—ã–≥—Ä—É–∂–∞–µ–º –¥–∞–Ω–Ω—ã–µ –æ —É–∂–µ –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω–Ω—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è—Ö
		cursor.execute('SELECT * FROM rss_list')
		row = cursor.fetchone()
		users = []
		while row is not None:
				users.append(row[1])
				row = cursor.fetchone()

		# –ï—Å–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–µ –Ω–∞–π–¥–µ–Ω - –¥–æ–±–∞–≤–∏–º		
		if message.from_user.first_name not in users:
			cursor.execute('INSERT INTO rss_list (chat_id, Username) VALUES (?, ?)', (message.chat.id, message.from_user.first_name))
			logger(message, '–î–æ–±–∞–≤–∏–ª –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è %s –≤ –±–∞–∑—É' % message.from_user.first_name)
		conn.commit()
		return


@bot.message_handler(commands=['help'])
def info_message(message):
	bot.send_message(message.chat.id, '–í –∂–∏–∑–Ω–∏ —Å–ª—É—á–∞–µ—Ç—Å—è –≤—Å—è–∫–æ–µ. –í —Ç–æ–º —á–∏—Å–ª–µ –∏ –ø—Ä–æ—Å—Ç—É–¥–∞ —Å —Ç–µ–º–ø–µ—Ä–∞—Ç—É—Ä–æ–π. –ü—É—Å—Ç—å —Ç—ã –∏ –ø—Ä–æ–ø—É—Å—Ç–∏–ª —É—Ä–æ–∫–∏, –Ω–æ –¥–æ–º–∞—à–Ω—é—é —Ä–∞–±–æ—Ç—É –Ω–∞–¥–æ –æ–±—è–∑–∞—Ç–µ–ª—å–Ω–æ —Å–¥–µ–ª–∞—Ç—å! –≠—Ç–æ—Ç –±–æ—Ç —Å–∫–∞–∂–µ—Ç —Ç–µ–±–µ, —á—Ç–æ –∑–∞–¥–∞–Ω–æ, –¥–∞–∂–µ –≤ 4 —É—Ç—Ä–∞! –ü–æ–ª—å–∑—É–π—Å—è –Ω–∞–∑–¥–æ—Ä–æ–≤—å–µ)', reply_markup=None)
	logger(message, 'called info')
	return


def logger(log_message, operation, err=False):
	''' –õ–æ–≥–≥–∏—Ä–æ–≤–∞–Ω–∏–µ –≤ —Ñ–∞–π–ª—ã log.txt –∏ errLog.txt '''

	# yyyy-mm-dd hh:mm:ss
	now = str(DT.datetime.now())[0:19]
	# –ó–∞–ø–∏—Å—å –æ—à–∏–±–æ–∫
	if err:
		with open(path + 'errLog.txt', 'a') as errLog:
			errLog.write(now + ' ' + log_message + '\n')
	# –ó–∞–ø–∏—Å—å –ª–æ–≥–æ–≤
	else:
		with open(path + 'log.txt', 'a') as log:
			log.write(now + ' - ' + log_message.from_user.first_name + ' - ' + operation + '\n')


@bot.message_handler(commands=['polojenie'])
def polojenieResponse(message):
	''' –û—Ç–ø—Ä–∞–≤–∫–∞ –ª—é–±–æ–≥–æ –¥–æ–∫—É–º–µ–Ω—Ç–∞. –í –¥–∞–Ω–Ω–æ–º —Å–ª—É—á–∞–µ - –ü–æ–ª–æ–∂–µ–Ω–∏—è –æ –∫–æ–Ω—Ñ–µ—Ä–µ–Ω—Ü–∏–∏ '''
	logger(message, '–°–∫–∞—á–∞–ª –ü–æ–ª–æ–∂–µ–Ω–∏–µ')
	bot.send_document(message.chat.id, polojenie)


def sqlAcces(func):
	''' –î–µ–∫–æ—Ä–∞—Ç–æ—Ä –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –¥–æ—Å—Ç—É–ø–∞ –∫ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö
		–ü–æ–º–æ–≥–∞–µ—Ç –Ω–µ –∑–∞–±—ã—Ç—å –∑–∞–∫—Ä—ã—Ç—å —Å–æ–µ–¥–∏–Ω–µ–Ω–∏–µ —Å –ë–î '''
	conn = sqlite3.connect(path + 'subjects.db')
	cursor = conn.cursor()
	
	# –î–∞—ë–º conn –¥–ª—è –∫–æ–º–º–∏—Ç–æ–≤ –∏ cursor
	func(conn, cursor)
	
	cursor.close()
	conn.close()


@bot.message_handler(commands=['start'])
def start_message(message):
	bot.send_message(message.chat.id, '–ü—Ä–∏–≤–µ—Ç, '+message.from_user.first_name+'!\U0001F604\n\n–ö–æ –º–Ω–µ –º–æ–∂–Ω–æ –æ–±—Ä–∞—Ç–∏—Ç—å—Å—è –∑–∞ –¥–æ–º–∞—à–Ω–∏–º –∑–∞–¥–∞–Ω–∏–µ–º!\n\n\U00002B07–í–Ω–∏–∑—É\U00002B07 –µ—Å—Ç—å –∫–ª–∞–≤–∏–∞—Ç—É—Ä–∞ –≤—ã–±–æ—Ä–∞ –ø—Ä–µ–¥–º–µ—Ç–∞, –≤—ã–±–µ—Ä–∏ –Ω—É–∂–Ω—ã–π –ø—Ä–µ–¥–º–µ—Ç –∏ –ø–æ–ª—É—á–∏—à—å –ø–æ—Å–ª–µ–¥–Ω–µ–µ –¥/–∑ –ø–æ –Ω–µ–º—É!\n\n–£–∑–Ω–∞—Ç—å –ø—Ä–µ–¥—Å—Ç–æ—è—â–∏–µ —Å–æ–±—ã—Ç–∏—è –º–æ–∂–Ω–æ —Å –ø–æ–º–æ—â—å—é –∫–Ω–æ–ø–∫–∏ –°–æ–±—ã—Ç–∏—è\n–ü–æ–ø–æ–¥—Ä–æ–±–Ω–µ–µ –ø—Ä–æ –±–æ—Ç–∞ - –∫–Ω–æ–ø–∫–∞ –ò–Ω—Ñ–æ',
					reply_markup=markup)
	logger(message, 'start command')
	return


@bot.message_handler(content_types=['text'])
def SubjectResponse(message):
	''' –û–±—Ä–∞–±–æ—Ç–∫–∞ –≤—Å–µ—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å—Å–∫–∏—Ö —Ç–µ–∫—Å—Ç–æ–≤—ã—Ö –∑–∞–ø—Ä–æ—Å–æ–≤ '''

	# –ï—Å—Ç—å –ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –≤ –±–∞–∑–µ. –°–ø–∏—Å–æ–∫ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π –∏—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è
	# –¥–ª—è –º–∞—Å—Å–æ–≤–æ–π —Ä–∞—Å—Å—ã–ª–∫–∏ –≤–∞–∂–Ω–æ–π —Å—Ä–æ—á–Ω–æ–π –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏
	inBase(message)

	# –ï—Å–ª–∏ —Å–ø—Ä–æ—Å–∏–ª–∏ –¥–∑ –ø–æ –ø—Ä–µ–¥–º–µ—Ç—É
	if message.text in subjectsList:
		logger(message, 'called homework for "%s"' % message.text)
		currentSubject(message)
	
	# –ï—Å–ª–∏ —Å–ø—Ä–æ—Å–∏–ª–∏ –î–ó –Ω–∞ –∑–∞–≤—Ç—Ä–∞
	elif '—á—Ç–æ –Ω–∞ –∑–∞–≤—Ç—Ä–∞' in message.text.lower():
		logger(message, 'called "–ß–æ –Ω–∞ –∑–∞–≤—Ç—Ä–∞?"')
		tomorrowHomework(message)

	# –ï—Å–ª–∏ —Å–ø—Ä–æ—Å–∏–ª–∏ –î–ó –Ω–∞ —Å–µ–≥–æ–¥–Ω—è
	elif '—á—Ç–æ –Ω–∞ —Å–µ–≥–æ–¥–Ω—è' in message.text.lower():
		logger(message, '–∑–∞–±—ã–≤—á–∏–≤—ã–π —á–µ–ª–æ–≤–µ–∫, –Ω–µ –ø–æ–º–Ω–∏—Ç –¥–∑ –Ω–∞ —Å–µ–≥–æ–¥–Ω—è')
		todayHomework(message)

	elif '—Å–æ–±—ã—Ç–∏—è' in message.text.lower():
		logger(message, '–ø–æ—Å–º–æ—Ç—Ä–µ–ª —Å–æ–±—ã—Ç–∏—è')
		events_message(message)

	elif '–∏–Ω—Ñ–æ' in message.text.lower():
		logger(message, '–ø–æ—Å–º–æ—Ç—Ä–µ–ª –∏–Ω—Ñ–æ')
		info_message(message)

	# –°–ø—Ä–æ—Å–∏–ª–∏ –ø–æ–≥–æ–¥—É
	elif '–ø–æ–≥–æ–¥–∫—É –±—ã —É–∑–Ω–∞—Ç—å' in message.text.lower() or '–ø–æ–≥–æ–¥–∞' in message.text.lower():
		logger(message, '–∑–∞–ø—Ä–æ—Å–∏–ª –ø–æ–≥–æ–¥—É')
		currentWeather_message(message)

	# –ü–æ–ø—ã—Ç–∞–µ–º—Å—è –Ω–∞–π—Ç–∏ —Å–æ–æ–±—â–µ–Ω–∏–µ –≤ –±–∞–∑–µ –∫—Ä–∞—Ç–∫–∏—Ö –æ—Ç–≤–µ—Ç–æ–≤
	else:
		customLowerMessageChecker(message)

	return


def todayHomework(message):
	''' –û—Ç–ø—Ä–∞–≤–∫–∞ —Å–µ–≥–æ–¥–Ω—è—à–Ω–µ–≥–æ –¥–æ–º–∞—à–Ω–µ–≥–æ –∑–∞–¥–∞–Ω–∏—è '''
	if defineWeekdyByDate(tomorrowDate()) == '–ø–æ–Ω–µ–¥–µ–ª—å–Ω–∏–∫':
		bot.send_message(message.chat.id, '–°–µ–≥–æ–¥–Ω—è –∂–µ –≤–æ—Å–∫—Ä–µ—Å–µ–Ω—å–µ! –ù–∏ –æ–¥–∏–Ω —Å–∞–¥–∏—Å—Ç –Ω–µ –∑–∞–¥–∞—Å—Ç –¥–∑ –Ω–∞ –≤–æ—Å–∫—Ä–µ—Å–µ–Ω—å–µ!')
		return

	@sqlAcces
	def returnTomorrowHW(conn, cursor):
		# –ò–∑–≤–ª–µ–∫–∞–µ–º –≤—Å–µ –î–ó –Ω–∞ –∑–∞–≤—Ç—Ä–∞
		cursor.execute('SELECT * FROM subjects WHERE dateToExec=?', (DT.date.today(), ))
		row = cursor.fetchone()
		response = ''
		# –ï—Å–ª–∏ –∏–∑–≤–ª–µ—á—ë–Ω–Ω–æ–µ –ø—É—Å—Ç–æ
		if row is None:
			response = '–ù–∏—á–µ–≥–æ –Ω–µ –∑–∞–¥–∞–Ω–æ'
		# –ï—Å–ª–∏ —á—Ç–æ-—Ç–æ –µ—Å—Ç—å
		else:
			while row is not None:
				response += '%s %s - %s\n' % (point, row[0], row[3]) # –ö—Ä–∞—Å–∏–≤–∞—è–¢–æ—á–∫–∞ –ü—Ä–µ–¥–º–µ—Ç - –¥–∑
				row = cursor.fetchone()
		# –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –≤—Å–µ –î–ó
		bot.send_message(message.chat.id, response, reply_markup=None)
		return


def tomorrowDate():
	''' –í–æ–∑–≤—Ä–∞—â–∞–µ—Ç –∑–∞–≤—Ç—Ä–∞—à–Ω—é—é –¥–∞—Ç—É –≤ —Ñ–æ—Ä–º–∞—Ç–µ yyyy-mm-dd '''
	today = DT.date.today()
	tomorrow = str(today + DT.timedelta(days=1))
	return tomorrow


def tomorrowHomework(message):
	''' –û—Ç–ø—Ä–∞–≤–∫–∞ –∑–∞–≤—Ç—Ä–∞—à–Ω–µ–≥–æ –¥–æ–º–∞—à–Ω–µ–≥–æ –∑–∞–¥–∞–Ω–∏—è '''
	# –ï—Å–ª–∏ –∑–∞–≤—Ç—Ä–∞ –≤–æ—Å–∫—Ä–µ—Å–µ–Ω—å–µ
	if defineWeekdyByDate(tomorrowDate()) == '–≤–æ—Å–∫—Ä–µ—Å–µ–Ω—å–µ':
		bot.send_message(message.chat.id, '–ó–∞–≤—Ç—Ä–∞ –≤–æ—Å–∫—Ä–µ—Å–µ–Ω—å–µ! –¢—ã —á–µ–≥–æ, –∫—Ç–æ –¥–µ–ª–∞–µ—Ç –¥–∑ –≤ —Å—É–±–±–æ—Ç—É?! –û—Ç–ª–∏—á–Ω–∏–∫ —á—Ç–æ –ª–∏?!')
		return

	@sqlAcces
	def returnTwHW(conn, cursor):
		# –ò–∑–≤–ª–µ—á—å –≤—Å–µ –î–ó –Ω–∞ –∑–∞–≤—Ç—Ä–∞
		cursor.execute('SELECT * FROM subjects WHERE dateToExec=?', (tomorrowDate(), ))
		row = cursor.fetchone()
		response = ''
		# –ï—Å–ª–∏ –∏–∑–≤–ª–µ—á—ë–Ω–Ω–æ–µ –ø—É—Å—Ç–æ
		if row is None:
			response = '–ù–∏—á–µ–≥–æ –Ω–µ –∑–∞–¥–∞–Ω–æ, –º–æ–∂–Ω–æ –∫–∞—Ç–∞—Ç—å –≤ –¥–æ—Ç–∫—É –≤–µ—Å—å –¥–µ–Ω—å'
		# –ï—Å–ª–∏ —á—Ç–æ-—Ç–æ –µ—Å—Ç—å
		else:
			while row is not None:
				response += '%s %s - %s\n' % (point, row[0], row[3]) # –ö—Ä–∞—Å–∏–≤–∞—è–¢–æ—á–∫–∞ –ü—Ä–µ–¥–º–µ—Ç - –¥–∑
				row = cursor.fetchone()

		# –ï—Å–ª–∏ –∑–∞–≤—Ç—Ä–∞ –µ—Å—Ç—å –∫–∞–∫–æ–µ-–ª–∏–±–æ —Å–æ–±—ã—Ç–∏–µ
		response += '\n'
		tomorrowDate_ = tomorrowDate()
		if tomorrowDate_[-2] == '0':
			tomorrowDate_ = tomorrowDate_[:-2] + tomorrowDate_[-1]
		cursor.execute('SELECT * FROM events WHERE deadline=?', (tomorrowDate_, ))
		row = cursor.fetchone()
		# –ï—Å–ª–∏ —Å–æ–±—ã—Ç–∏–π –Ω–µ—Ç
		if row is None:
			pass
		# –ï—Å–ª–∏ –µ—Å—Ç—å
		else:
			while row is not None:
				response += point + row[0] + '\n'
				row = cursor.fetchone()

		# –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –î–ó –∏ —Å–æ–±—ã—Ç–∏—è –Ω–∞ –∑–∞–≤—Ç—Ä–∞
		bot.send_message(message.chat.id, response, reply_markup=None)
		return


@bot.message_handler(commands=['hz'])
def updateSubjToHZ(message):
	''' –ö–æ–º–∞–Ω–¥–∞ –¥–ª—è —É–¥–∞–ª–µ–Ω–∏—è –¥–æ–º–∞—à–Ω–µ–≥–æ –∑–∞–¥–∞–Ω–∏—è –ø–æ –≤—ã–±—Ä–∞–Ω–Ω–æ–º—É –ø—Ä–µ–¥–º–µ—Ç—É '''
	# –†–∞–∑—Ä–µ—à–µ–Ω–æ –¥–ª—è –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä—É
	if message.from_user.id in admins_id_list:
		bot.send_message(message.chat.id, '–ò–º—è –ø—Ä–µ–¥–º–µ—Ç–∞, –ø–æ –ø–æ–∫–æ—Ç–æ—Ä–æ–º—É –±—É–¥–µ—Ç –Ω–∞–∑–Ω–∞—á–µ–Ω–æ "–Ω–µ—Ç –¥–∑"?',	reply_markup=None)
		def hz(message):
			@sqlAcces
			def putHZ(conn, cursor):
				# –û–ø—Ä–µ–¥–µ–ª–∏–ª–∏ –ø—Ä–µ–¥–º–µ—Ç, –∑–∞—Ç–∏—Ä–∞–µ–º –î–ó
				subj = message.text
				# –ï—Å–ª–∏ –æ—à–∏–±–ª–∏—Å—å —Å –Ω–∞–∑–≤–∞–Ω–∏–µ–º
				if subj not in subjectsList:
					bot.send_message(message.chat.id, '–ù–µ—Ç —Ç–∞–∫–æ–≥–æ –ø—Ä–µ–¥–º–µ—Ç–∞', reply_markup=None)
					return
				# E—Å–ª–∏ —Ç–∞–∫–æ–π –ø—Ä–µ–¥–º–µ—Ç –µ—Å—Ç—å, –∑–∞—Ç–∏—Ä–∞–µ–º –î–ó –ø–æ –Ω–µ–º—É
				else:
					cursor.execute('UPDATE subjects SET weekday=?,dateToExec=?,homework=? WHERE SubjName=?', ('—Ö–∑','—Ö–∑','–ù–∏—á–µ–≥–æ –Ω–µ –∑–∞–¥–∞–Ω–æ', subj))
					conn.commit()
					bot.send_message(message.chat.id, '–£—Å–ø–µ—à–Ω–æ –∑–∞—Ç—ë—Ä –¥–∑ –Ω–∞ '+subj, reply_markup=None)
					return
				logger(message, 'clear HW for '+subj)
		bot.register_next_step_handler(message, hz)



# –í–µ—á–Ω—ã–π —Ü–∏–∫–ª –Ω–∞ –æ–±—Ä–∞–±–æ—Ç–∫—É –æ—à–∏–±–æ–∫ –ø—Ä–∏ —Ä–∞–±–æ—Ç–µ
while True:
	try:
		# –ü–æ–ª–ª–∏–Ω–≥
		bot.polling(interval=2.5, none_stop=True)
	except Exception as e:
		# –ó–∞–ø–∏—Å–∞—Ç—å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ–± –æ—à–∏–±–∫–µ
		logger(str(e), 'null', err=True)
		# –ü–æ–¥–æ–∂–¥–∞—Ç—å
		sleep(20)
		continue